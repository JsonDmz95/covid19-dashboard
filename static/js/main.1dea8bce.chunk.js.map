{"version":3,"sources":["img/search.svg","img/logo.svg","img/overview.svg","img/holder.png","img/link.png","img/arrow.svg","Components/StyledComponents.js","Components/Header.js","Components/helpers.js","Components/SmallCard.js","Components/GlobalTrends.js","Components/Spinner.js","Components/CountryPreview.js","Components/ContinentCollapse.js","Components/SelectedInfo.js","Components/MainCard.js","Components/MainPanel.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","purple","red","HeaderContainer","styled","header","NavLi","li","MainTitle","h1","GolbalCard","div","BigCard","Form","form","search","CardHeader","CountryPreviewItem","a","EmptyMessage","p","CountryInfo","Header","href","className","title","src","logo","alt","overview","addCommas","quantity","toString","replace","replaceHyphen","string","formatDate","fullDate","formated","Date","date","getDate","slice","month","getMonth","year","getFullYear","hour","getHours","minutes","getMinutes","axiosConfig","headers","setHeight","container","document","getElementById","currectHeight","window","getComputedStyle","getPropertyValue","style","height","maxHeight","addEventListener","SmallCard","cardTitle","cardQuantity","cardColor","GlobalTrends","globalData","cases","total","recovered","active","deaths","Spinner","CountryPreview","country","updateSelectedCountry","onClick","population","time","ContinentCollapse","idContinent","countriesList","open","continent","toLowerCase","data-toggle","id","map","key","SelectedInfo","selectedCountry","tests","MainCard","saved","JSON","parse","localStorage","getItem","useState","completeList","updateCompleteList","mapedList","updateMapedList","nortamericaList","updateNortamericaList","southamericaList","updateSouthamericaList","asiaList","updateAsiaList","africaList","updateAfricaList","europeList","updateEuropeList","oceaniaList","updateOceaniaList","othersList","updateOthersList","updateOpen","loading","updateLoading","emptySearch","updateEmptySearch","memory","updateMemory","useEffect","setItem","stringify","axios","get","response","data","readAPI","filter","Object","keys","length","HolderImg","onSubmit","e","preventDefault","type","placeholder","name","onChange","value","target","trim","includes","MainPanel","updateGlobalDate","readApi","LinkImg","Arrow","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1dea8bce.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/search.3939a4f6.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.129e88d5.svg\";","module.exports = __webpack_public_path__ + \"static/media/overview.5a5ed9ad.svg\";","module.exports = __webpack_public_path__ + \"static/media/holder.406df75f.png\";","module.exports = __webpack_public_path__ + \"static/media/link.20aa21f1.png\";","module.exports = __webpack_public_path__ + \"static/media/arrow.84423651.svg\";","import styled from \"@emotion/styled\";\r\n\r\nimport search from \"../img/search.svg\";\r\n\r\nconst bgWhite = `249,252,255`;\r\nconst deepPurple = `36,15,82`;\r\nconst purple = `98,54,255`;\r\nconst green = `28,177,66`;\r\nconst orange = `255,100,0`;\r\nconst red = `249,52,94`;\r\nconst shadow = `129,124,155`;\r\n\r\nexport const HeaderContainer = styled.header`\r\n  padding: 10px 20px 0px 20px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  @media (min-width: 768px) {\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    padding: 40px 0px 40px 15px;\r\n  }\r\n`;\r\n\r\nexport const NavLi = styled.li`\r\n  background: rgb(${bgWhite});\r\n  position: relative;\r\n\r\n  a {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    padding: 10px 40px;\r\n    color: rgba(${deepPurple});\r\n\r\n    img {\r\n      margin-bottom: 8px;\r\n    }\r\n\r\n    &:hover {\r\n      text-decoration: none;\r\n    }\r\n  }\r\n\r\n  &.active {\r\n    &::before,\r\n    &::after {\r\n      content: \"\";\r\n      display: block;\r\n      width: 30px;\r\n      height: 100px;\r\n      background: rgb(${deepPurple});\r\n      position: absolute;\r\n      bottom: 0px;\r\n      top: auto;\r\n    }\r\n\r\n    &::before {\r\n      border-radius: 0px 0px 20px 0px;\r\n      left: -5px;\r\n      right: auto;\r\n    }\r\n\r\n    &::after {\r\n      border-radius: 0px 0px 0px 20px;\r\n      right: -5px;\r\n      left: auto;\r\n    }\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    a {\r\n      padding: 50px 25px;\r\n    }\r\n\r\n    &.active {\r\n      &::before,\r\n      &::after {\r\n        width: 120px;\r\n        height: 30px;\r\n        right: 0px;\r\n        left: auto;\r\n      }\r\n\r\n      &::before {\r\n        border-radius: 0px 0px 20px 0px;\r\n        top: 0px;\r\n        bottom: auto;\r\n      }\r\n\r\n      &::after {\r\n        border-radius: 0px 20px 0px 0px;\r\n        bottom: 0px;\r\n        top: auto;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const MainTitle = styled.h1`\r\n  font-size: 35px;\r\n  font-weight: 400;\r\n  color: rgb(${deepPurple});\r\n  margin-bottom: 30px;\r\n\r\n  b {\r\n    /* display: block; */\r\n    font-weight: 600;\r\n    color: rgb(${purple});\r\n    margin-right: 25px;\r\n  }\r\n\r\n  @media (min-width: 7638px) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nexport const GolbalCard = styled.div`\r\n  background: #fff;\r\n  padding: 20px;\r\n  text-align: center;\r\n  box-shadow: 10px 10px 30px rgba(${shadow}, 0.15);\r\n  border-radius: 40px;\r\n  min-width: 270px;\r\n\r\n  h2 {\r\n    font-size: 18px;\r\n    color: rgba(${deepPurple});\r\n  }\r\n\r\n  p {\r\n    font-weight: 600;\r\n    font-size: 40px;\r\n    color: rgb(${purple});\r\n    margin: 0px;\r\n  }\r\n\r\n  &.green p {\r\n    color: rgb(${green});\r\n  }\r\n\r\n  &.orange p {\r\n    color: rgb(${orange});\r\n  }\r\n\r\n  &.red p {\r\n    color: rgb(${red});\r\n  }\r\n  & + div {\r\n    margin-top: 30px;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    margin-bottom: 30px;\r\n    & + div {\r\n      margin-top: 0px;\r\n    }\r\n  }\r\n\r\n  @media (min-width: 1700px) {\r\n    margin: 0px;\r\n  }\r\n`;\r\n\r\nexport const BigCard = styled.div`\r\n  padding: 20px;\r\n  background: #fff;\r\n  border-radius: 40px;\r\n  box-shadow: 10px 10px 60px rgba(${shadow}, 0.25);\r\n  margin-top: 40px;\r\n  flex: 1;\r\n\r\n  .list-countries {\r\n    margin-top: 30px;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    padding: 50px;\r\n    display: flex;\r\n    flex-direction: row-reverse;\r\n\r\n    .country-info{\r\n      flex: 1;\r\n\r\n      img{\r\n        opacity: 0.85\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (min-width: 1600px){\r\n    margin-top: 75px;\r\n  }\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  position: relative;\r\n  input {\r\n    font-size: 14px;\r\n    padding: 15px 15px 15px 60px;\r\n    border-radius: 60px;\r\n    line-height: 1;\r\n    border: none;\r\n    background: rgb(${bgWhite});\r\n    box-shadow: inset 0px 0px 20px rgba(${shadow}, 0.15);\r\n    outline: none;\r\n    /* width: 290px; */\r\n    width: 100%;\r\n\r\n    ::placeholder {\r\n      color: rgba(${deepPurple}, 0.5);\r\n    }\r\n  }\r\n  &::before {\r\n    content: \"\";\r\n    display: block;\r\n    height: 20px;\r\n    width: 20px;\r\n    background: url(${search});\r\n    position: absolute;\r\n    top: 15px;\r\n    bottom: auto;\r\n    left: 20px;\r\n    right: auto;\r\n    pointer-events: none;\r\n  }\r\n`;\r\n\r\nexport const CardHeader = styled.div`\r\n  padding: 0px;\r\n  background: transparent;\r\n  border: none;\r\n\r\n  &::hover,\r\n  &:active,\r\n  &:focus {\r\n    text-decoration: none !important;\r\n    outline: none;\r\n    &::hover,\r\n    &:active,\r\n    &:focus {\r\n      text-decoration: none !important;\r\n      outline: none;\r\n    }\r\n  }\r\n\r\n  &:first-of-type {\r\n    border-radius: 0px;\r\n  }\r\n\r\n  .card-link {\r\n    display: block;\r\n    padding: 10px 0px 10px 20px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: rgb(${purple});\r\n  }\r\n`;\r\n\r\nexport const CountryPreviewItem = styled.a`\r\n  display: block;\r\n  padding: 15px 20px;\r\n  color: rgb(${deepPurple});\r\n  cursor: pointer;\r\n\r\n  .header{\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    margin-bottom: 8px;\r\n  }\r\n\r\n  p{\r\n    margin-bottom: 5px;\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nexport const EmptyMessage = styled.p`\r\n  margin-bottom: 0px;\r\n  padding: 15px;\r\n  font-size: 16px;\r\n  font-weight: 700;\r\n  /* text-transform: uppercase; */\r\n  line-height: 1.5;\r\n  color: rgb(${red});\r\n`;\r\n\r\nexport const CountryInfo = styled.div`\r\n  padding-bottom: 30px;\r\n\r\n  .country-name{\r\n    font-size: 36px;\r\n    text-transform: uppercase;\r\n    margin-bottom: 0px;\r\n  }\r\n\r\n  .country-continent{\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    margin-bottom: 8px;\r\n  }\r\n\r\n  .updated{\r\n    margin-bottom: 0px;\r\n    font-size: 14px;\r\n\r\n    b{\r\n      font-weight: 600;\r\n    }\r\n  }\r\n\r\n  .data-container{\r\n    padding-top: 50px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    flex-wrap: wrap;\r\n\r\n    .data-item{\r\n      .data-title{\r\n        font-size: 16px;\r\n        font-weight: 600;\r\n        display: block;\r\n        margin-bottom: 8px;\r\n      }\r\n\r\n      .data-quantity{\r\n          font-size: 35px;\r\n\r\n          &.purple{\r\n            color: rgb(${purple});\r\n          }\r\n          &.green{\r\n            color: rgb(${green});\r\n          }\r\n          &.orange{\r\n            color: rgb(${orange});\r\n          }\r\n          &.red{\r\n            color: rgb(${red});\r\n          }\r\n        }\r\n    }\r\n  }\r\n\r\n  @media (min-width: 768px){\r\n    padding-bottom: 0px;\r\n    padding-left: 20px;\r\n  }\r\n\r\n  @media (min-width: 992px){\r\n    padding-left: 30px;\r\n  }\r\n\r\n  @media (min-width: 1200px){\r\n    padding-left: 50px;\r\n  }\r\n`;","import React from 'react';\r\n\r\nimport {HeaderContainer, NavLi} from './StyledComponents';\r\n\r\nimport logo from \"../img/logo.svg\" ;\r\nimport overview from \"../img/overview.svg\" ;\r\n\r\nconst Header = () => {\r\n  return (\r\n    <HeaderContainer>\r\n      <a href=\"/\" className=\"logo-container\" title=\"COVID-19 Global Trends\">\r\n        <img src={logo} className=\"img-fluid\" alt=\"COVID-19 Global Trends\"/>\r\n      </a>\r\n\r\n      <nav>\r\n        <ul className=\"\">\r\n          <NavLi className=\"active\">\r\n          <a className=\"nav-link\" href=\"#/\">\r\n            <img src={overview} className=\"img-fluid\" alt=\"Overview\"/>\r\n            Overview\r\n          </a>\r\n          </NavLi>\r\n        </ul>\r\n      </nav>\r\n    </HeaderContainer>\r\n  );\r\n}\r\n \r\nexport default Header;","export function addCommas(quantity) {\r\n  return quantity.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\nexport function replaceHyphen(string) {\r\n  return string.replace(/-/g,' ');\r\n}\r\n\r\nexport function replaceSpace(string) {\r\n  return string.replace(/\\s/g ,'-');\r\n}\r\n\r\nexport function formatDate(fullDate){\r\n  const formated = new Date(fullDate);\r\n  // console.log(formated);\r\n  const date = (\"0\"+formated.getDate()).slice(-2);\r\n  const month = (\"0\"+(formated.getMonth()+1));\r\n  const year = formated.getFullYear();\r\n\r\n  const hour = (\"0\"+formated.getHours()).slice(-2);\r\n  const minutes = (\"0\"+formated.getMinutes()).slice(-2);\r\n\r\n  return `${date}/${month}/${year} ${hour}:${minutes}`;\r\n}\r\n\r\nexport const axiosConfig = {\r\n  headers: {\r\n    \"x-rapidapi-host\": \"covid-193.p.rapidapi.com\",\r\n    \"x-rapidapi-key\":  \"f9bc729bcdmshcecd66d04dcdc1bp199240jsn92860f4865ca\"\r\n  }\r\n}\r\n\r\nexport function setHeight (){\r\n  let container = document.getElementById('list-countries');\r\n  let currectHeight = window.getComputedStyle(container, null).getPropertyValue(\"height\");\r\n  // console.log(currectHeight);\r\n  container.style.height=currectHeight;\r\n  container.style.maxHeight=currectHeight;\r\n}\r\n\r\nwindow.addEventListener(\"resize\", setHeight);\r\n\r\n// document.addEventListener(\"DOMContentLoaded\", setHeight());\r\n","import React from 'react';\r\n\r\nimport {GolbalCard} from \"./StyledComponents\"\r\nimport {addCommas} from \"./helpers\"\r\n\r\nconst SmallCard = ({cardTitle, cardQuantity, cardColor}) => {\r\n  return (\r\n    <GolbalCard className={cardColor}>\r\n      <h2>Global {cardTitle}</h2>\r\n      <p>{addCommas(cardQuantity)}</p>\r\n    </GolbalCard>\r\n  );\r\n}\r\n \r\nexport default SmallCard;","import React from 'react';\r\nimport SmallCard from \"./SmallCard\"\r\n\r\nconst GlobalTrends = ({globalData}) => {\r\n  // console.log(globalData);\r\n  return (\r\n    <div className=\"cards-container\">\r\n      <SmallCard \r\n        cardTitle=\"Confirmed\"\r\n        cardQuantity={globalData.cases.total}\r\n        cardColor='purple'\r\n      />\r\n      <SmallCard \r\n        cardTitle=\"Recovered\"\r\n        cardQuantity={globalData.cases.recovered}\r\n        cardColor='green'\r\n      />\r\n      <SmallCard \r\n        cardTitle=\"Actives\"\r\n        cardQuantity={globalData.cases.active}\r\n        cardColor='orange'\r\n      />\r\n      <SmallCard \r\n        cardTitle=\"Deaths\"\r\n        cardQuantity={globalData.deaths.total}\r\n        cardColor='red'\r\n      />\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default GlobalTrends;","import React from \"react\";\r\nimport \"./Spinner.css\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"spinner\">\r\n      <div className=\"rect1\"></div>\r\n      <div className=\"rect2\"></div>\r\n      <div className=\"rect3\"></div>\r\n      <div className=\"rect4\"></div>\r\n      <div className=\"rect5\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\n// import { Link } from 'react-router-dom'\r\nimport { CountryPreviewItem } from \"./StyledComponents\";\r\nimport { replaceHyphen, addCommas, formatDate } from \"./helpers\";\r\n\r\nconst CountryPreview = ({ country, updateSelectedCountry }) => {\r\n\r\n  const handleClick = () => {\r\n    updateSelectedCountry(country);\r\n  }\r\n\r\n  return (\r\n    <CountryPreviewItem\r\n      className=\"country-link\"\r\n      title={country.country}\r\n      onClick={handleClick}\r\n      // href={`/country/${country.country}`}\r\n    >\r\n      <div className=\"min-card\">\r\n        <div className=\"header\">\r\n          <span className=\"name\">{replaceHyphen(country.country)}</span>\r\n          <span className=\"total-cases\">{addCommas(country.cases.total)}</span>\r\n        </div>\r\n        <div className=\"body\">\r\n          <p>\r\n            <b>Population: </b>\r\n            {country.population? addCommas(country.population) : \"Not available\"}\r\n          </p>\r\n          <p>\r\n            <b>Last update: </b>{formatDate(country.time)}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </CountryPreviewItem>\r\n  );\r\n};\r\n\r\nexport default CountryPreview;\r\n","import React from \"react\";\r\nimport CountryPreview from \"./CountryPreview\";\r\n\r\nimport { CardHeader } from \"./StyledComponents\";\r\nimport { setHeight } from \"./helpers\";\r\n\r\nconst ContinentCollapse = ({\r\n  countriesList,\r\n  header,\r\n  open,\r\n  updateSelectedCountry,\r\n}) => {\r\n  setHeight();\r\n  // console.log(countriesList);\r\n  let idContinent;\r\n  if (countriesList[0].continent === null) {\r\n    idContinent = `others`;\r\n  } else {\r\n    idContinent = countriesList[0].continent.toLowerCase();\r\n  }\r\n  return (\r\n    <div className=\"card\">\r\n      <CardHeader className=\"card-header\">\r\n        <a\r\n          className=\"card-link\"\r\n          data-toggle=\"collapse\"\r\n          href={`#collapse-${idContinent}`}\r\n          title={header}\r\n        >\r\n          {header}\r\n        </a>\r\n      </CardHeader>\r\n\r\n      <div\r\n        className={open ? \"collapse show\" : \"collapse\"}\r\n        id={`collapse-${idContinent}`}\r\n      >\r\n        {countriesList.map((country) => (\r\n          <CountryPreview\r\n            key={country.country}\r\n            country={country}\r\n            updateSelectedCountry={updateSelectedCountry}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContinentCollapse;\r\n","import React from \"react\";\r\n\r\nimport { CountryInfo } from \"./StyledComponents\";\r\nimport { replaceHyphen, formatDate, addCommas } from \"./helpers\";\r\n\r\nconst SelectedInfo = ({ selectedCountry }) => {\r\n  // console.log(selectedCountry);\r\n  //Destructuring\r\n  const { country, time, cases, deaths, tests } = selectedCountry;\r\n  let { continent } = selectedCountry;\r\n  //END OF Destructuring\r\n  if (continent === null) {\r\n    continent = \"Others\";\r\n  } else {\r\n    if (continent === \"North-America\") {\r\n      continent = \"North & Central America\";\r\n    }\r\n  }\r\n  return (\r\n    <CountryInfo id=\"country-info\">\r\n      <h2 className=\"country-name\">{replaceHyphen(country)}</h2>\r\n      <p className=\"country-continent\">{replaceHyphen(continent)}</p>\r\n      <p className=\"updated\">\r\n        <b>Last update:</b> {formatDate(time)}\r\n      </p>\r\n\r\n      <div className=\"data-container\">\r\n        <div className=\"data-item\">\r\n          <span className=\"data-title\">Confirmed</span>\r\n          <h3 className=\"data-quantity purple\">{addCommas(cases.total)}</h3>\r\n        </div>\r\n\r\n        <div className=\"data-item\">\r\n          <span className=\"data-title\">Recovered</span>\r\n          <h3 className=\"data-quantity green\">\r\n            {addCommas(cases.recovered)}\r\n          </h3>\r\n        </div>\r\n\r\n        <div className=\"data-item\">\r\n          <span className=\"data-title\">Active</span>\r\n          <h3 className=\"data-quantity orange\">{addCommas(cases.active)}</h3>\r\n        </div>\r\n\r\n        <div className=\"data-item\">\r\n          <span className=\"data-title\">Deaths</span>\r\n          <h3 className=\"data-quantity red\">{addCommas(deaths.total)}</h3>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"data-container\">\r\n        <div className=\"data-item\">\r\n          <span className=\"data-title\">Tests</span>\r\n          <h3 className=\"data-quantity purple\">{tests.total === null? \"Not Available\" : addCommas(tests.total)}</h3>\r\n        </div>\r\n      </div>\r\n    </CountryInfo>\r\n  );\r\n};\r\n\r\nexport default SelectedInfo;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n\r\nimport axios from \"axios\";\r\n\r\nimport Spinner from \"./Spinner\";\r\nimport ContinentCollapse from \"./ContinentCollapse\";\r\nimport SelectedInfo from \"./SelectedInfo\";\r\n\r\nimport { axiosConfig, replaceSpace } from \"./helpers\";\r\nimport { BigCard, Form, EmptyMessage } from \"./StyledComponents\";\r\nimport HolderImg from \"../img/holder.png\";\r\n\r\nconst MainCard = () => {\r\n\r\n  // Guaradar Consulta \r\n  let saved = JSON.parse(localStorage.getItem('search'));\r\n  if(!saved){\r\n    saved = \"\";\r\n  }\r\n  // END OF Guaradar Consulta \r\n\r\n  // States\r\n  const [completeList, updateCompleteList] = useState([]);\r\n  const [mapedList, updateMapedList] = useState([]);\r\n\r\n  const [nortamericaList, updateNortamericaList] = useState([]);\r\n  const [southamericaList, updateSouthamericaList] = useState([]);\r\n  const [asiaList, updateAsiaList] = useState([]);\r\n  const [africaList, updateAfricaList] = useState([]);\r\n  const [europeList, updateEuropeList] = useState([]);\r\n  const [oceaniaList, updateOceaniaList] = useState([]);\r\n  const [othersList, updateOthersList] = useState([]);\r\n\r\n  const [open, updateOpen] = useState(false);\r\n  const [loading, updateLoading] = useState(true);\r\n  const [emptySearch, updateEmptySearch] = useState(false);\r\n\r\n  const [selectedCountry, updateSelectedCountry] = useState({});\r\n\r\n  const [memory, updateMemory] = useState(saved);\r\n  // END OF States\r\n\r\n  // Get last search \r\n  useEffect(() => {\r\n    // let saved = JSON.parse(localStorage.getItem('search'));\r\n\r\n    if(saved){\r\n      localStorage.setItem('search', JSON.stringify(memory))\r\n    }else{\r\n      localStorage.setItem('search', JSON.stringify([]))\r\n    }\r\n  }, [memory, saved]);\r\n  // END OF Get last search \r\n\r\n  //Get all countries data\r\n  useEffect(() => {\r\n    const readAPI = async () => {\r\n      const url = \"https://covid-193.p.rapidapi.com/statistics\";\r\n\r\n      const response = await axios.get(url, axiosConfig);\r\n      updateCompleteList(response.data.response);\r\n      updateMapedList(response.data.response);\r\n\r\n      updateLoading(false);\r\n    };\r\n    readAPI();\r\n  }, []);\r\n  //END OF Get all countries data\r\n\r\n  //Order country by continent\r\n  useEffect(() => {\r\n    updateNortamericaList(\r\n      mapedList.filter((country) => country.continent === \"North-America\")\r\n    );\r\n\r\n    updateSouthamericaList(\r\n      mapedList.filter((country) => country.continent === \"South-America\")\r\n    );\r\n\r\n    updateAsiaList(mapedList.filter((country) => country.continent === \"Asia\"));\r\n\r\n    updateAfricaList(\r\n      mapedList.filter((country) => country.continent === \"Africa\")\r\n    );\r\n\r\n    updateEuropeList(\r\n      mapedList.filter((country) => country.continent === \"Europe\")\r\n    );\r\n\r\n    updateOceaniaList(\r\n      mapedList.filter((country) => country.continent === \"Oceania\")\r\n    );\r\n\r\n    updateOthersList(mapedList.filter((country) => country.continent === null));\r\n  }, [mapedList]);\r\n  //END OF Order country by continent\r\n\r\n  //When the user type on the serach field\r\n  const handleChange = (e) => {\r\n    let value = e.target.value;\r\n    if (value === \"\" || value.trim() === \"\") {\r\n      updateMapedList(completeList);\r\n      updateOpen(false);\r\n      updateEmptySearch(false);\r\n    } else {\r\n      updateMapedList(\r\n        completeList.filter((country) =>\r\n          country.country.toLowerCase().includes(replaceSpace(value).toLowerCase())\r\n        )\r\n      );\r\n      updateOpen(true);\r\n    }\r\n\r\n    if (mapedList.length === 0) {\r\n      updateEmptySearch(true);\r\n    } else {\r\n      updateEmptySearch(false);\r\n    }\r\n  };\r\n  //END OF When the user type on the serach field\r\n\r\n  //On enter\r\n  const hadleSubmitt = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (mapedList.length === 1) {\r\n      updateSelectedCountry(mapedList[0]);\r\n\r\n      // let field= document.getElementById(\"country\")\r\n      updateMemory(mapedList[0].country);\r\n\r\n      // this.props.history.push(`/country/${mapedList[0].country}`);\r\n    }\r\n  };\r\n  // END OF on enter\r\n\r\n  return (\r\n    <BigCard>\r\n      <div className=\"country-info\">\r\n        {Object.keys(selectedCountry).length === 0 ? \r\n          <img src={HolderImg} className=\"img-fluid d-block\" alt=\"Holder\"/>\r\n        :  <SelectedInfo selectedCountry={selectedCountry}/>\r\n        }\r\n      </div>\r\n      <div className=\"searcher\">\r\n        <Form onSubmit={hadleSubmitt}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search Country\"\r\n            name=\"country\"\r\n            id=\"country\"\r\n            onChange={handleChange}\r\n            // value={memory}\r\n          />\r\n        </Form>\r\n\r\n        <div className=\"list-countries\" id=\"list-countries\">\r\n          {loading ? <Spinner /> : null}\r\n\r\n          <div id=\"continents-acordeon\">\r\n            {nortamericaList.length > 0 ? (\r\n              <ContinentCollapse\r\n                updateSelectedCountry={updateSelectedCountry}\r\n                open={open}\r\n                countriesList={nortamericaList}\r\n                header=\"North & Central America\"\r\n              />\r\n            ) : null}\r\n\r\n            {southamericaList.length > 0 ? (\r\n              <ContinentCollapse\r\n                updateSelectedCountry={updateSelectedCountry}\r\n                open={open}\r\n                countriesList={southamericaList}\r\n                header=\"South America\"\r\n              />\r\n            ) : null}\r\n\r\n            {africaList.length > 0 ? (\r\n              <ContinentCollapse\r\n                updateSelectedCountry={updateSelectedCountry}\r\n                open={open}\r\n                countriesList={africaList}\r\n                header=\"Africa\"\r\n              />\r\n            ) : null}\r\n\r\n            {asiaList.length > 0 ? (\r\n              <ContinentCollapse\r\n                updateSelectedCountry={updateSelectedCountry}\r\n                open={open}\r\n                countriesList={asiaList}\r\n                header=\"Asia\"\r\n              />\r\n            ) : null}\r\n\r\n            {europeList.length > 0 ? (\r\n              <ContinentCollapse\r\n                updateSelectedCountry={updateSelectedCountry}\r\n                open={open}\r\n                countriesList={europeList}\r\n                header=\"Europe\"\r\n              />\r\n            ) : null}\r\n\r\n            {oceaniaList.length > 0 ? (\r\n              <ContinentCollapse\r\n                updateSelectedCountry={updateSelectedCountry}\r\n                open={open}\r\n                countriesList={oceaniaList}\r\n                header=\"Oceania\"\r\n              />\r\n            ) : null}\r\n\r\n            {othersList.length > 0 ? (\r\n              <ContinentCollapse\r\n                updateSelectedCountry={updateSelectedCountry}\r\n                open={open}\r\n                countriesList={othersList}\r\n                header=\"Others\"\r\n              />\r\n            ) : null}\r\n\r\n            {emptySearch ? (\r\n              <EmptyMessage>\r\n                Your search did not match any result :(\r\n              </EmptyMessage>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </BigCard>\r\n  );\r\n};\r\n\r\nexport default MainCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport GlobalTrends from \"./GlobalTrends\";\r\nimport MainCard from \"./MainCard\";\r\nimport { axiosConfig } from \"./helpers\";\r\n\r\nimport Spinner from \"./Spinner\";\r\nimport { MainTitle } from \"./StyledComponents\";\r\n\r\nimport LinkImg from \"../img/link.png\";\r\nimport Arrow from \"../img/arrow.svg\";\r\n\r\nconst MainPanel = () => {\r\n  // States\r\n  const [globalData, updateGlobalDate] = useState({});\r\n  // END OF States\r\n\r\n  // Consul global data\r\n  useEffect(() => {\r\n    const readApi = async () => {\r\n      const url = \"https://covid-193.p.rapidapi.com/statistics?country=all\";\r\n\r\n      const response = await axios.get(url, axiosConfig);\r\n      updateGlobalDate(response.data.response[0]);\r\n    };\r\n\r\n    readApi();\r\n  }, []);\r\n  // END OF Consul global data\r\n\r\n  return (\r\n    <div className=\"main-panel\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <MainTitle className=\"main-title\">\r\n              <b>COVID-19</b> Global Trends\r\n            </MainTitle>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"container-fluid main-conatiner\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-lg-10 col-xl-9 data-col\">\r\n            {Object.keys(globalData).length === 0 ? (\r\n              <Spinner />\r\n            ) : (\r\n              <GlobalTrends globalData={globalData} />\r\n            )}\r\n\r\n            <MainCard />\r\n          </div>\r\n\r\n          <div className=\"col-12 col-lg-2 col-xl-3 d-none d-xl-inline-block\">\r\n            <a\r\n              href=\"https://www.who.int/emergencies/diseases/novel-coronavirus-2019/advice-for-public\"\r\n              target=\"_blank\"\r\n              title=\"WHO: Coronavirus disease (COVID-19) advice for the public\"\r\n              className=\"card-container\"\r\n            >\r\n              <div className=\"blueCard\">\r\n                <img alt=\"Fight against the covid\" src={LinkImg} className=\"img-fluid\"/>\r\n\r\n                <div className=\"card-text\">\r\n                  <div className=\"head\">\r\n                    <h3>Covid-19 Info</h3>\r\n                    <img alt=\"Go\" src={Arrow}/>\r\n                  </div>\r\n\r\n                  <p>WHO: Coronavirus disease (COVID-19) advice for the public</p>\r\n                </div>\r\n              </div>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPanel;\r\n","import React, { Fragment } from \"react\";\nimport Header from \"./Components/Header\";\nimport MainPanel from \"./Components/MainPanel\";\n\nfunction App() {\n  return (\n    <Fragment>\n      <Header />\n\n      <MainPanel />\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/main.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}